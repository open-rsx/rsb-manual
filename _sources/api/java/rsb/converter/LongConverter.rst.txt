.. java:import:: java.nio ByteBuffer

LongConverter
=============

.. java:package:: rsb.converter
   :noindex:

.. java:type:: public class LongConverter implements Converter<ByteBuffer>

   A converter with wire type \ :java:ref:`ByteBuffer`\  that is capable of handling integers that fit into 64 bits by using the Java \ :java:ref:`Long`\  type.

   :author: jmoringe, jwienke

Fields
------
INT64_SIGNATURE
^^^^^^^^^^^^^^^

.. java:field:: public static final ConverterSignature INT64_SIGNATURE
   :outertype: LongConverter

   Signature for using the converter with unsigned integers.

UINT64_SIGNATURE
^^^^^^^^^^^^^^^^

.. java:field:: public static final ConverterSignature UINT64_SIGNATURE
   :outertype: LongConverter

   Signature for using the converter with signed integers. This may result in overflows.

Constructors
------------
LongConverter
^^^^^^^^^^^^^

.. java:constructor:: public LongConverter(ConverterSignature signature)
   :outertype: LongConverter

   Constructor allowing different signatures.

   :param signature: the signature to use

Methods
-------
deserialize
^^^^^^^^^^^

.. java:method:: @Override public UserData<ByteBuffer> deserialize(String wireSchema, ByteBuffer bytes) throws ConversionException
   :outertype: LongConverter

getSignature
^^^^^^^^^^^^

.. java:method:: @Override public ConverterSignature getSignature()
   :outertype: LongConverter

serialize
^^^^^^^^^

.. java:method:: @Override public WireContents<ByteBuffer> serialize(Class<?> typeInfo, Object data) throws ConversionException
   :outertype: LongConverter

